<krpano><!-- AP — default vtour skin: skin events -->	
	
	<!-- События для всех типов устройств -->
	<!-- Событие onviewchange нельзя дублировать, иначе оно не работает в версии 1.17(релиз)-->
	
	<events name="loader_events" keep="true"
	
		onxmlcomplete="
			if(nonsense === null, 
				switch_interface();
				set(nonsense, false);
			);
			set(autorotate.enabled, false);
			set(flg1, get(extended_loader.enabled_flag));
			set(flg2, get(extended_loader.photos_flag));
			
			if(flg1, 
				if(flg2, 
					set(pano_weight, get(extended_loader.pano_weight));
					set(imgs_weight, get(extended_loader.photos_weight));
					
					div(pano_limit, imgs_weight, pano_weight);
					add(pano_limit, 1);
					div(pano_limit, 1, pano_limit);
					mul(pano_limit, 100);
					set(extended_loader.pano_loading_percent_limit, get(pano_limit));
					
					sub(imgs_limit, 100, pano_limit);
					div(image_limit, imgs_limit, get(extended_loader.photos_amount));
					set(extended_loader.photo_loading_percent_limit, get(image_limit));
				);
			);
						
			loadingpercent_startloading();
		"		
		onloadcomplete="			
			copy(flg, extended_loader.enabled_flag);
			
			delayedcall(0, loadingpercent_stoploading());
			
			if(flg,
				load_photos(get(extended_loader.photos_amount));
			);
		"
	/>
	
	<!-- loading percent graphics/text -->
	<layer name="loadingpercent_text" keep="true"
		url="%SWFPATH%/plugins/textfield.swf"
		align="center"
		background="false"
		visible="false"
		enabled="false"
		handcursor="true" capture="false" 
		autoheight="true"
		css="text-align:center; color:#ffffff; opacity: 0.75; font-family:OpenSans-Light, sans-serif; font-size:45px;"
		html=""
		onloaded="
			if(device.mobile,
				set(css, 'text-align:center; color:#ffffff; opacity: 0.75; font-family:OpenSans-Light, sans-serif; font-size:60px;');
			);
		"
	/>

	
	<!-- loading percent actions -->	
	<action name="loadingpercent_startloading">
		set(loadingpercent_isloading, true);
		set(layer[loadingpercent_text].alpha, 1);
		set(old_pv, 0);
		set(i, 0);
		set(percent_limit, get(extended_loader.pano_loading_percent_limit));
		set(layer[loadingpercent_text].html, 'Загружено 0%');	
		asyncloop(loadingpercent_isloading,
			mul(pv, progress.progress, percent_limit);
			roundval(pv, 0);
			if(pv GT old_pv,
				if(pv GT 1,
					inc(i);
					if(i GT 10,
						txtadd(layer[loadingpercent_text].html, 'Загружено ', get(pv), '%');
						set(old_pv, get(pv));
					);
				);
			);
		);
	</action>	
	
	<action name="loadingpercent_stoploading">
		set(loadingpercent_isloading, false); 
		
		set(flg1, get(extended_loader.enabled_flag));
		set(flg2, get(extended_loader.photos_flag));
		
		ifnot(flg1, 
			set(layer[loadingpercent_text].html, 'Загружено 100%');
			delayedcall(0.5, 
				loading_doneactions();
			);
		);
		if(flg1, 
			if(flg2,
				loading_photo_percent_startloading();
			);
		);
	</action>	
	
	<action name="loading_photo_percent_startloading">
		set(loaded_amount, get(extended_loader.photos_loaded_amount));
		set(load_limit, get(extended_loader.photos_amount));
		set(pv, get(extended_loader.pano_loading_percent_limit));
		
		asyncloop(loaded_amount LT load_limit,	
			set(loaded_amount, get(extended_loader.photos_loaded_amount));
			roundval(pv, 0);
			if(pv GT 100, set(pv, 100));
			txtadd(layer[loadingpercent_text].html, 'Загружено ', get(pv), '%');
			,
			set(layer[loadingpercent_text].html, 'Загружено 100%');			
			delayedcall(0.5, 
				loading_doneactions();
			);			
		);
	</action>	
	
	<action name="loading_doneactions">
		set(layer[loadingpercent_text].visible, false);
		removelayer(loadingpercent_text);
		
		set(events[loader_events].onxmlcomplete, '');
		set(events[loader_events].onloadcomplete, '');
	
		set(flag1, get(skin_settings.auto_enable_gyro_flag));
		copy(flag, get(plugin[skin_gyro].available));
		
			set(plugin[skin_btn_gyro].alpha, '1.0');
			if(skin_settings.show_interface_at_startup,
				show_interface();
			);
			tween(layer[poster].alpha, 0, 1, easeInOutQuad,
				set(started, true);
				delayedcall(1, set(autorotate.enabled, true));
			);
	</action>
	
	<events name="all_devices_events" keep="true"
		onmouseup="			
			if(layer[skin_thumbs].state == 'opened',
				skin_showthumbs(false);
			);
			set(autorotate.waittime, 30);
		"
		onxmlcomplete="
			if(started === null, 
				skin_addthumbs();
				
				if(device.mobile,
					set(max_photo_size, 0.9);
				,
					set(max_photo_size, 0.8);
				);
				
			,
				for(set(i, 0), i LT hotspot.count, inc(i),
					set(hotspot[get(i)].alpha, 1);
					set(hotspot[get(i)].visible, true);
					set(hotspot[get(i)].enabled, true);
				);
			);
			
			if(device.mobile,
			if(device.windows,
				delayedcall(0.1, add_wp8_touchfields(get(hotspot.count)));
				
				set(layer[skin_control_bar].height, 75);
				
				set(layer[skin_panocounter].y, 19);				
				
				set(layer[skin_scroll_window].y, 75);
				set(layer[skin_scroll_window].y_shown, 75);
				set(layer[skin_title].y, 0);
			
			);
			);
			
			skin_startup();
			
			copy(shown_flag, scene[get(xml.scene)].shown);
			if(shown_flag === null,
				set(scene[get(xml.scene)].shown, true);
				
				copy(i, scene[get(xml.scene)].index);
				txtadd(thumb_caption,'skin_thumb_caption', get(i));
				
				txtadd(layer[get(thumb_caption)].html, get(layer[get(thumb_caption)].html), ' [b]✓[/b]');
			);
			
			set(flag, get(skin_settings.fish_eye_toggle_flag));
			if(flag,
				set(view.fovmax, 180);
				fisheye_mechanics();
				set(contextmenu.item[0].caption, 'Выключить сверхширокий обзор');
			);			
		"
		onnewpano="
			skin_update_scene_infos();			
			
			set(n1, get(scene[get(xml.scene)].index));
			
			sub(n1, 1);
			set(skin_settings.prev_pano_name, get(scene[get(n1)].title));
			add(n1, 2);
			set(skin_settings.next_pano_name, get(scene[get(n1)].title));
			
			txtadd(txt1, get(n1), '/', get(scene.count));
			set(layer[skin_panocounter].html, get(txt1));
			
			set(layer[skin_btn_next].tick_limit, 5);
			set(layer[skin_btn_prev].tick_limit, 5);			
		"	  

		onloadcomplete="
			set(autorotate.waittime, 0.1);
		"

		onresize="
			skin_onresize();
		"
		onviewchange="
			set(flag1, get(skin_settings.show_photo_mode_flag));
			
			if(flag1, 
				set(h1, get(stageheight));
				set(w1, get(stagewidth));
				
				set(skin_photo_w, get(layer[get(skin_settings.skin_active_photo_layer)].width));
				set(skin_photo_h, get(layer[get(skin_settings.skin_active_photo_layer)].height));
				set(scl, get(layer[get(skin_settings.skin_active_photo_layer)].scale));
				
				div(screen_ratio, w1, h1);
				div(photo_ratio, skin_photo_w, skin_photo_h);
			
				if(screen_ratio GT photo_ratio,
					mul(h1, max_photo_size);							
					div(h1, get(skin_photo_h));
					set(scale_h, get(h1));
					if(scale_h GT 1,
						set(scale_h, 1);
					);
					
					if(scl LT scale_h,
						tween(layer[get(skin_settings.skin_active_photo_layer)].scale, get(scale_h), 0.1, linear);
					,
						set(layer[get(skin_settings.skin_active_photo_layer)].scale, get(scale_h));
					);
				,
					mul(w1, max_photo_size);							
					div(w1, skin_photo_w);
					set(scale_w, get(w1));
					if(scale_w GT 1,
						set(scale_w, 1);
					);
					if(scl LT scale_w,
						tween(layer[get(skin_settings.skin_active_photo_layer)].scale, get(scale_w), 0.1, linear);
					,
						set(layer[get(skin_settings.skin_active_photo_layer)].scale, get(scale_w));
					);
				);
				
				if(device.mobile,
					set_mobile_touchfields();
				);
				
				if(device.iphone, 
					if(device.safariversion GE 7.0,
						if(screen_ratio GT 1,
							set(layer[skin_btn_close_gallery].y, 104);
							set(layer[skin_btn_close].y, 104);
						,
							set(layer[skin_btn_close_gallery].y, 24);
							set(layer[skin_btn_close].y, 24);
						);
					);
				);
			);
		"
	/>
	
	<action name="fisheye_mechanics">
	
		set(fisheyeflag, get(skin_settings.fish_eye_toggle_flag));
		
		if(fisheyeflag,
			set(fov, get(view.fov));
			if(fov GT 177,
				set(control.mousefovchange, 10);
				set(control.fovfriction, 0.7);
			,
				if(fov GT 168,
					set(control.mousefovchange, 2.5);
					set(control.fovfriction, 0.8);
				,
					if(fov GT 160,
						set(control.mousefovchange, 1);
						set(control.fovfriction, 0.9);
					,
						set(control.mousefovchange, 1);
						set(control.fovfriction, 0.9);
					);
				);
			);
			
			if(view.fov GT 130,
				set(flag, get(skin_settings.fishflag));
				ifnot(flag, 
					set(view.fovmax, 180);
					set(skin_settings.fishflag, true);									
					tween(view.fisheye, 0.35, 1);
				);
			);
			
			if(view.fov LT 135,
				set(flag, get(skin_settings.fishflag));
				if(flag, 
					set(view.fovmax, 140);
					set(skin_settings.fishflag, false);									
					tween(view.fisheye, 0.0, 1)
				);
			);
		);
		
	</action>
	
	<!-- Обработчики для мобильных устройств -->
		
	<events name="mobile_events" devices="mobile" keep="true"	
		onenterfullscreen="
			set(layer[skin_btn_fs].crop, '39|80|39|39'); 
			set(layer[skin_btn_fs].ondowncropcrop, '78|80|39|39'); 
			set(layer[skin_btn_fs_gallery].crop, '39|479|39|39'); 
			set(layer[skin_btn_fs_gallery].ondowncropcrop, '78|479|39|39'); 
		"
	    onexitfullscreen="
			set(layer[skin_btn_fs].crop, '39|119|39|39'); 
			set(layer[skin_btn_fs].ondowncropcrop, '78|119|39|39'); 
			set(layer[skin_btn_fs_gallery].crop, '39|518|39|39'); 
			set(layer[skin_btn_fs_gallery].ondowncropcrop, '78|518|39|39'); 
		"
		onviewchanged="
			if(layer[poster].visible,
				div(ratio, stagewidth, stageheight);
				if(ratio LT 2,
					div(layer[poster].scale, stageheight, layer[poster].height);
				,
					div(layer[poster].scale, stagewidth, layer[poster].width);
				);
			);
			
			math.pow(pow1, view.hfov, 2);
			math.pow(pow2, view.vfov, 2);
			add(dfov, pow1, pow2);
			math.sqrt(dfov);
			
			if(dfov GT 128,
				hide_hotspots_recurrent(get(hotspot.count));
			);
			if(dfov LT 128,							
				if(dfov LT 90,		
					hide_hotspots_recurrent(get(hotspot.count));
				,
					show_hotspots_recurrent(get(hotspot.count));
				);
			);
		"
	/>
	
	<events name="tablet_events" devices="tablet" keep="true"
		onviewchanged="		
			if(device.safariversion GE 7.0,
				if(fullscreen,
					if(stagewidth GT stageheight,
						set(layer[skin_control_bar].y, 20);
						set(layer[skin_scroll_window].y, 60);
					,
						set(layer[skin_control_bar].y, 0);
						set(layer[skin_scroll_window].y, 40);
					);
				);
			);
			if(layer[poster].visible,
				div(ratio, stagewidth, stageheight);
				if(ratio LT 2,
					div(layer[poster].scale, stageheight, layer[poster].height);
				,
					div(layer[poster].scale, stagewidth, layer[poster].width);
				);
			);
			
			math.pow(pow1, view.hfov, 2);
			math.pow(pow2, view.vfov, 2);
			add(dfov, pow1, pow2);
			math.sqrt(dfov);
			
			if(dfov GT 160,
				hide_hotspots_recurrent(get(hotspot.count));
			);
			if(dfov LT 160,							
				if(dfov LT 90,		
					hide_hotspots_recurrent(get(hotspot.count));
				,
					show_hotspots_recurrent(get(hotspot.count));
				);
			);
		"
		onenterfullscreen="
			js(
				inFullScreen = true;
				ModeHide();
			);
			set(layer[skin_btn_fs].crop, '39|80|39|39'); 
			set(layer[skin_btn_fs].ondowncropcrop, '78|80|39|39'); 
			set(layer[skin_btn_fs_gallery].crop, '39|80|39|39'); 
			set(layer[skin_btn_fs_gallery].ondowncropcrop, '78|80|39|39'); 
			
			if(device.safariversion GE 7.0,
				if(stagewidth GT stageheight,
					set(layer[skin_control_bar].y, 20);
					set(layer[skin_scroll_window].y, 60);
				);
			);
		"
	    onexitfullscreen="
			js(
				inFullScreen = false;
				ModeShow();
			);
			set(layer[skin_btn_fs].crop, '39|119|39|39'); 
			set(layer[skin_btn_fs].ondowncropcrop, '78|119|39|39'); 
			set(layer[skin_btn_fs_gallery].crop, '39|119|39|39'); 
			set(layer[skin_btn_fs_gallery].ondowncropcrop, '78|119|39|39'); 
			
			if(device.safariversion GE 7.0,
				if(stagewidth GT stageheight,
					set(layer[skin_control_bar].y, 0);
					set(layer[skin_scroll_window].y, 40);
				);
			);
		"
	/>

	<!-- Обработчики для десктопов -->
	<events name="desktop_events" devices="desktop" keep="true"
		onenterfullscreen="
			set(layer[skin_btn_fs].caption, 'Выйти из полноэкранного режима'); 
			set(layer[skin_btn_fs].crop, '141|88|22|22'); 
			set(layer[skin_btn_fs].ondowncrop, '163|88|22|22'); 
			set(layer[skin_btn_fs_gallery].crop, '141|88|22|22'); 
			set(layer[skin_btn_fs_gallery].ondowncrop, '163|88|22|22'); 
			
		"
		onexitfullscreen="
			set(layer[skin_btn_fs].caption, 'Перейти в полноэкранный режим'); 
			set(layer[skin_btn_fs].crop, '141|128|22|22'); 
			set(layer[skin_btn_fs].crop, '163|128|22|22'); 
			set(layer[skin_btn_fs_gallery].crop, '141|128|22|22'); 
			set(layer[skin_btn_fs_gallery].crop, '163|128|22|22'); 
			
		"
		onviewchanged="
			if(hs_thumb_container_visible, 
				update_hs_thumb_pos();
			);
			fisheye_mechanics();
			
			
			math.pow(pow1, view.hfov, 2);
			math.pow(pow2, view.vfov, 2);
			add(dfov, pow1, pow2);
			math.sqrt(dfov);
			
			if(dfov GT 160,
				hide_hotspots_recurrent(get(hotspot.count));
			);
			if(dfov LT 160,							
				if(dfov LT 90,		
					hide_hotspots_recurrent(get(hotspot.count));
				,
					show_hotspots_recurrent(get(hotspot.count));
				);
			);
		"
		onresize="
			skin_onresize();
		
			set(w, get(stagewidth));
			if(w LT 720, 
				set(layer[skin_title].visible, false);
				set(layer[skin_btn_desc].visible, false);
				set(layer[skin_btn_view].visible, false);						
				,
				
				set(layer[skin_title].visible, true);
				
				set(flag, get(skin_settings.skin_btn_view_visibility_flag));
				if(flag != null,
					if(flag,
						ifnot(device.mobile,
							set(layer[skin_btn_view].visible, true);
						);
					);
				);
				
				set(flag, get(skin_settings.skin_btn_desc_visibility_flag));
				if(flag != null,
					if(flag,
						ifnot(device.mobile,
							set(layer[skin_btn_desc].visible, true);		
						);
					);
				);				
			);
			
			if(layer[poster].visible,
				div(ratio, stagewidth, stageheight);
				if(ratio LT 2,
					div(layer[poster].scale, stageheight, layer[poster].height);
				,
					div(layer[poster].scale, stagewidth, layer[poster].width);
				);
			);
		"
					
		onkeydown="
			if(keycode == 17,
				set(skin_settings.ctrl_flag, true);				
			);
			
			if(keycode == 32,
				set(skin_settings.space_flag, true);				
			);
		
			if(skin_settings.ctrl_flag, 
				
				set(vlookat_moveforce, 0);
				set(hlookat_moveforce, 0);
				
				if(keycode == 37,
					skin_nextscene(-1);
				);
				if(keycode == 39,
					skin_nextscene(+1);
				);				
			);
			
			if(skin_settings.space_flag,
				if(keycode == 73,
					switch_interface();
				);
			);			
			
			if(keycode == 107,
				set(fov_moveforce, -0.25);
			);
			if(keycode == 61,
				set(fov_moveforce, -0.25);
			);
			if(keycode == 109,
				set(fov_moveforce, 0.25);
			);
			if(keycode == 173,
				set(fov_moveforce, 0.25);
			);
		"
		onkeyup="
			if(keycode == 122, 
				switch(fullscreen); 
				if(fullscreen, 
					delayedcall(0, get(events[skin_events].onenterfullscreen));
				); 
				if(fullscreen != 'true', 
					delayedcall(0, get(events[skin_events].onexitfullscreen));
				); 
			);
			if(keycode == 17,
				set(skin_settings.ctrl_flag, false);
			);
			if(keycode == 32,
				set(skin_settings.space_flag, false);				
			);
			if(keycode == 107,
				set(fov_moveforce, 0);
			);
			if(keycode == 173,
				set(fov_moveforce, 0);
			);
			if(keycode == 109,
				set(fov_moveforce, 0);
			);
			if(keycode == 61,
				set(fov_moveforce, 0);
			);
		"
	/>
	
	<!-- 
		Переключение видимости всех хотспотов на панораме.
		В %1 передаётся требуемое состояние(true/false).
	-->
	<action name="hotspot_visibility">
		set(flag, get(skin_settings.skin_hs_visible));
		if(flag,
			ifnot(%1,
				for(set(i,0), i LT hotspot.count, inc(i), 
					set(hotspot[%i].visible, false);
				);
				set(skin_settings.skin_hs_visible, false);
			);
		);
		ifnot(flag,
			if(%1,
				for(set(i,0), i LT hotspot.count, inc(i), 
					set(hotspot[%i].visible, true);
				);
				set(skin_settings.skin_hs_visible, true);
			);
		);
	</action>
	
	<action name="hide_hotspots">
		for(set(i,0), i LT hotspot.count, inc(i), 
			set(hotspot[%i].visible, false);
		);
		set(skin_settings.skin_hs_visible, false);
	</action>
	
	<action name="show_hotspots">
		for(set(i,0), i LT hotspot.count, inc(i), 
			set(hotspot[%i].visible, true);
		);
		set(skin_settings.skin_hs_visible, true);
	</action>
	
	<!-- 
		Плавное по непрозрачности погашение всех хотспотов. 
		В качестве аргумента передаётся hotspot.count
		Функция крашит даже сафари.
	-->
	
	<action name="hide_hotspots_recurrent">
		set(flag, get(skin_settings.skin_hs_visible));
		if(flag,
			sub(skin_settings.recurrent_i, %1, 1);		
			if(%1 GE 1,	
				set(hotspot[get(skin_settings.recurrent_i)].alpha, 0.1);
				hide_hs_thumb(false);
				set(hotspot[get(skin_settings.recurrent_i)].enabled, false);
				delayedcall(0.01, hide_hotspots_recurrent(get(skin_settings.recurrent_i)));
			,	
				set(skin_settings.skin_hs_visible, false);
			);
		);
	</action>
	
	<!-- Плавное по непрозрачности возвращение всех хотспотов. -->
	<action name="show_hotspots_recurrent">
		set(flag, get(skin_settings.skin_hs_visible));
		ifnot(flag,
			sub(skin_settings.recurrent_i, %1, 1);		
			if(%1 GE 1,			
				set(hotspot[get(skin_settings.recurrent_i)].alpha, 1);
				set(hotspot[get(skin_settings.recurrent_i)].enabled, true);
				delayedcall(0.01, show_hotspots_recurrent(get(skin_settings.recurrent_i)));
			,
				set(skin_settings.skin_hs_visible, true);
			);
		);
	</action>
	
	<!-- Функция переключения видимости интерфейса (F12/i) -->
	<action name="switch_interface">
		switch(skin_settings.skin_hs_visible);
		switch(layer[skin_control_bar].visible);
		if(device.mobile,
			switch(layer[skin_title].visible);
		);
		
		switch(layer[skin_cont_photo].bgalpha, 0, 0.8);
		switch(layer[scrolltextwindow].bgalpha, 0, 0.8);
		
		for(set(i, 0), i LT hotspot.count, inc(i),
			switch(hotspot[get(i)].visible);
		);
		
		set(flag, get(layer[skin_scroll_window].visible));		
		ifnot(flag,
			set(events[skin_events].onviewchange, 
				'for(set(i, 0), i LT hotspot.count, inc(i),
					set(hotspot[get(i)].visible, false);
				);'
			);
		);
		
		if(flag,
			set(events[skin_events].onviewchange, '');
		);
	</action>
	
	<!--
		Функция красивого отображения интерфейса. 
		Используется только при старте тура.
	-->
	<action name="show_interface">
		set(layer[skin_control_bar].alpha, 0);
		set(layer[skin_control_bar].visible, true);
		
		set(flag, get(layer[skin_scroll_window].visible));
		if(flag,
			set(events[skin_events].onviewchange, '');
		);
		
		set(layer[skin_cont_photo].bgalpha, 0.8);
		set(layer[scrolltextwindow].bgalpha, 0.8);
		
		tween(layer[skin_control_bar].alpha, 1, 1, easeInOutQuad, 
			if(device.mobile,
				switch(layer[skin_title].visible);
			);
			for(set(i, 0), i LT hotspot.count, inc(i),
				set(hotspot[get(i)].alpha, 1);
				set(hotspot[get(i)].visible, true);
				set(hotspot[get(i)].enabled, true);
			);
		);
						
	</action>
	
	<!-- Обработчик переключения в сверхширокоугольный режим обзора -->
	<action name="toggle_events_for_fisheye_view">
		set(flag, get(skin_settings.fish_eye_toggle_flag));
		
		ifnot(flag,		
			set(skin_settings.fish_eye_toggle_flag, true);		
			set(view.fovmax, 180);						
			tween(view.fov, 180, 3,,
				set(view.fovmax, 180);
			);
			tween(view.fisheye, 0.35, 1);
			set(contextmenu.item[1].caption, 'Выключить сверхширокий обзор');	
		,
			set(skin_settings.fish_eye_toggle_flag, false);		
			set(control.mousefovchange, 1);
			set(control.fovfriction, 0.9);
			
			if(view.fov GT 129,
				tween(view.fov, 129, 3,,
					set(view.fovmax, 140);
				);
			,
				set(view.fovmax, 140);
			);

			tween(view.fisheye, 0.0, 3);			
			set(contextmenu.item[1].caption, 'Включить сверхширокий обзор');			
		);		
	</action>	
	
</krpano>